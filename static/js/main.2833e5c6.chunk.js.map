{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","darkMode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","toggleButton","htmlRole","htmlFor","react_router","Textarea","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","label","onChange","e","target","value","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","el","length","Alert","capitalize","word","charAt","slice","alert","role","message","About","defaultProps","App","setdarkMode","_useState3","_useState4","setalert","setTimeout","path","element","body","index","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2833e5c6.chunk.js","sourcesContent":["import React  from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Outlet,Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <>\r\n       \r\n<nav className={`navbar navbar-expand-lg navbar-${props.darkMode} bg-${props.darkMode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.darkMode === \"dark\"?\"light\":\"dark\"}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleButton} htmlRole=\"switch\" id=\"darkdarkMode\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark darkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n<Outlet />\r\n</>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title:PropTypes.string.isRequired,\r\n  about:PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title:\"Title\",\r\n  about:\"About\"\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function Textarea(props) {\r\n    const handleUpClick =()=>{\r\n        // console.log(\"Uppercase button clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text is transformed to Uppercase !!!\",\"success\");\r\n    }\r\n    const handleLowerClick =()=>{\r\n        // console.log(\"Uppercase button clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text is transformed to Lowercase !!!\",\"success\");\r\n    }\r\n    const handleClearClick =()=>{\r\n        // console.log(\"Uppercase button clicked\");\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text is cleared !!!\",\"success\");\r\n    }\r\n    const handleCopyOnClick = ()=>{\r\n\r\n        let text = document.getElementById(\"text1\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text is copied !!!\",\"success\");\r\n      }\r\n    const handleExtraSpace =()=>{\r\n\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra space is removed !!!\",\"success\");\r\n  \r\n    }\r\n    const handleOnChange =(e)=>{\r\n        // console.log(\"OnChanged button clicked\");\r\n        setText(e.target.value);\r\n    }\r\n    const[text,setText] = useState(\"\");\r\n\r\n\r\n  return (\r\n    <><div >\r\n    <div className=\"form-group\" style={{color:props.darkMode === \"dark\"?\"white\":\"black\"}}>\r\n      <label htmlFor=\"text1\"><h2>{props.label}</h2></label>\r\n      <textarea className=\"form-control\"  onChange={handleOnChange}  style={{backgroundColor:props.darkMode === \"dark\"?\"#185066\":\"white\",color:props.darkMode === \"dark\"?\"white\":\"black\"}} value={text} id=\"text1\" rows=\"8\"></textarea>\r\n    </div>\r\n\r\n    <button className=\"btn btn-primary m-1 col-6 col-sm-2\"  style={{color:props.darkMode === \"dark\"?\"white\":\"black\"}} onClick={handleUpClick}>Convert to Uppercase</button>\r\n    <button className=\"btn btn-primary m-1 col-5 col-sm-2\"  style={{color:props.darkMode === \"dark\"?\"white\":\"black\"}} onClick={handleClearClick}>Click to Clear</button>\r\n    <button className=\"btn btn-primary m-1 col-6 col-sm-2\"  style={{color:props.darkMode === \"dark\"?\"white\":\"black\"}} onClick={handleLowerClick}>Convert to Lowercase</button>\r\n    <button className=\"btn btn-primary m-1 col-5 col-sm-2\"  style={{color:props.darkMode === \"dark\"?\"white\":\"black\"}} onClick={handleCopyOnClick}>Click to Copy</button>\r\n    <button className=\"btn btn-primary m-1 col-6 col-sm-2\"  style={{color:props.darkMode === \"dark\"?\"white\":\"black\"}} onClick={handleExtraSpace}>Remove Extra Space</button>\r\n\r\n  </div>\r\n  <div className='my-3'  style={{color:props.darkMode === \"dark\"?\"white\":\"black\"}}>\r\n      <h2>Text Manipulation Results</h2>\r\n      <p>{text.split(\" \").filter((el)=>{ return el.length>0}).length} words and {text.length} characters ...</p>\r\n      <p>{0.5/125*text.length} minutes to read ...</p>\r\n      <h2 className=\"my-2\">Preview</h2>\r\n      <p>{text.length>0?text:\"Please enter something in above text bix to preview here...\"}</p>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\nfunction capitalize(word)\r\n{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+word.slice(1);\r\n}\r\n  return (\r\n    props.alert && <>  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>:{capitalize(props.alert.message)}\r\n\r\n  </div></>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n   <>\r\n   \r\n   ANANTA RAJ SHRESTHA Computer Engineering Student of TU\r\n   \r\n   I am currently studying Computer Engineering at Institute of Engineering, Paschimanchal Campus, Pokhara-16, Lamachour. I am also poem/story writer i.e. i have had deep interest in Nepali Literature with more than 100 poems have been written by myself within 4 years period. I would like to digitize everything in our daily life through engineering.\r\n   </>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport React,{useState} from 'react'\nimport Alert from './components/Alert';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport About from './components/About';\n\n\nfunction App() {\n  const[darkMode,setdarkMode] = useState(\"light\");\n  const toggleButton =()=>{\n    if(darkMode === 'light')\n    {\n      setdarkMode('dark');\n      document.body.style.backgroundColor=\"#185066\";\n      showAlert(\"dark mode is enabled !!!\",\"success\");\n      document.title=\"Text Manipulator - Dark mode is enabled\";\n      // setInterval(() => {\n      //   document.title=\"Text Manipulator - Install Now\";\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title=\"Text Manipulator - Limited Time 50% Offer\";\n      // }, 2000);\n    }else{\n      setdarkMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"dark mode is disabled !!!\",\"success\");\n      \n    }\n  }\n\n  const [alert, setalert] = useState(null);\n  const showAlert=(message,type)=>{\n  setalert({\n    message:message,\n    type:type\n  });\n  \n  setTimeout(() => {\n    setalert(null);\n  }, 2000);\n\n  }\n\n\n  return (\n    <>\n\n\n\n\n\n\n    <BrowserRouter>\n      <Routes>\n       <Route path=\"/\" element={<>\n      \n        <Navbar  title=\"Text Manipulator\" darkMode = {darkMode} alert={alert} toggleButton={toggleButton}   about=\"About Us\"/>\n        \n       </>}>\n       <Route index element={<>\n        \n        <div className=\"container my-5\">\n        <Alert  alert={alert}/>\n        <Textarea alert={alert} showAlert={showAlert} label=\"Enter text here to manipulate\"/>\n        </div>\n       </>} />\n        <Route path=\"about\" element={   <>\n        <div className=\"container my-5\">\n        <Alert alert={alert}/>\n        <About/>\n        </div> </>} \n       \n       />\n\n       </Route>\n\n\n      </Routes>\n    </BrowserRouter>\n  \n\n</>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n    {/* <h1>Hello World !!!</h1> */}\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}